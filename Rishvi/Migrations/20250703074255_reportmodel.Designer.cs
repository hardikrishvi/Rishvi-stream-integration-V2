// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rishvi.Modules.Core.Data;

#nullable disable

namespace Rishvi.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20250703074255_reportmodel")]
    partial class reportmodel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Rishvi.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Continent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("temp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Rishvi.Models.Authorization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorizationToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientSecret")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfigStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpirationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FtpHost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FtpPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FtpPort")
                        .HasColumnType("int");

                    b.Property<string>("FtpUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IntegratedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsConfigActive")
                        .HasColumnType("bit");

                    b.Property<string>("LabelReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinnRefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinnworksServer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinnworksToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinnworksUniqueIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PartyFileCreated")
                        .HasColumnType("bit");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("access_token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("expires_in")
                        .HasColumnType("int");

                    b.Property<string>("fulfiilmentLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("refresh_token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("refresh_token_expires_in")
                        .HasColumnType("int");

                    b.Property<string>("token_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authorizations");
                });

            modelBuilder.Entity("Rishvi.Models.CustomerInfo", b =>
                {
                    b.Property<Guid>("CustomerInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BillingAddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChannelBuyerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CustomerInfoId");

                    b.HasIndex("AddressId");

                    b.HasIndex("BillingAddressId");

                    b.ToTable("CustomerInfo");
                });

            modelBuilder.Entity("Rishvi.Models.Ebay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DispatchOrderFromEbay")
                        .HasColumnType("bit");

                    b.Property<bool>("DownloadOrderFromEbay")
                        .HasColumnType("bit");

                    b.Property<bool>("SendOrderToStream")
                        .HasColumnType("bit");

                    b.Property<bool>("UpdateInformationFromEbayToStream")
                        .HasColumnType("bit");

                    b.Property<bool>("UpdateTrackingDetailsFromStream")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Ebay");
                });

            modelBuilder.Entity("Rishvi.Models.Event", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("event_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("event_code_desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("event_date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("event_desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("event_link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("event_text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("event_time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Rishvi.Models.Fulfillment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FulfillmentState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOrderState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Fulfillment");
                });

            modelBuilder.Entity("Rishvi.Models.GeneralInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DespatchByDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalReferenceNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HasScheduledDelivery")
                        .HasColumnType("bit");

                    b.Property<bool?>("HoldOrCancel")
                        .HasColumnType("bit");

                    b.Property<bool?>("InvoicePrinted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsParked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRuleRun")
                        .HasColumnType("bit");

                    b.Property<string>("LabelError")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("LabelPrinted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("Location")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Marker")
                        .HasColumnType("int");

                    b.Property<int?>("Notes")
                        .HasColumnType("int");

                    b.Property<int?>("NumItems")
                        .HasColumnType("int");

                    b.Property<bool?>("PartShipped")
                        .HasColumnType("bit");

                    b.Property<bool?>("PickListPrinted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReferenceNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondaryReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SubSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GeneralInfo");
                });

            modelBuilder.Entity("Rishvi.Models.IntegrationSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuthorizationToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EbayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastSyncOn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastSyncOnDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LinnworksId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LinnworksSyncToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StreamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SyncId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ebayhour")
                        .HasColumnType("int");

                    b.Property<int>("ebaypage")
                        .HasColumnType("int");

                    b.Property<int>("linnhour")
                        .HasColumnType("int");

                    b.Property<int>("linnpage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EbayId");

                    b.HasIndex("LinnworksId");

                    b.HasIndex("StreamId");

                    b.HasIndex("SyncId");

                    b.ToTable("IntegrationSettings");
                });

            modelBuilder.Entity("Rishvi.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AvailableStock")
                        .HasColumnType("int");

                    b.Property<string>("BarcodeNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BinRack")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChannelSKU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChannelTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Cost")
                        .HasColumnType("float");

                    b.Property<double?>("CostIncTax")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InOrderBook")
                        .HasColumnType("int");

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ItemId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<int?>("MinimumLevel")
                        .HasColumnType("int");

                    b.Property<int?>("OnOrder")
                        .HasColumnType("int");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderRootOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("PricePerUnit")
                        .HasColumnType("float");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("RowId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StockItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("StockItemIntId")
                        .HasColumnType("int");

                    b.Property<bool?>("StockLevelsSpecified")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("UnitCost")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ItemId1");

                    b.HasIndex("OrderRootOrderId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("Rishvi.Models.LinnworksSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DispatchOrderFromEbay")
                        .HasColumnType("bit");

                    b.Property<bool>("DispatchOrderFromStream")
                        .HasColumnType("bit");

                    b.Property<bool>("DownloadOrderFromEbay")
                        .HasColumnType("bit");

                    b.Property<bool>("DownloadOrderFromStream")
                        .HasColumnType("bit");

                    b.Property<bool>("PrintLabelFromLinnworks")
                        .HasColumnType("bit");

                    b.Property<bool>("PrintLabelFromStream")
                        .HasColumnType("bit");

                    b.Property<bool>("SendChangeToEbay")
                        .HasColumnType("bit");

                    b.Property<bool>("SendChangeToStream")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LinnworksSettings");
                });

            modelBuilder.Entity("Rishvi.Models.OrderRoot", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("CanFulfil")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FulfillmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GeneralInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("HasItems")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPostFilteredOut")
                        .HasColumnType("bit");

                    b.Property<int?>("NumOrderId")
                        .HasColumnType("int");

                    b.Property<Guid>("ShippingInfoShippingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TaxInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TempColumn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalItemsSum")
                        .HasColumnType("int");

                    b.Property<Guid>("TotalsInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerInfoId");

                    b.HasIndex("FulfillmentId");

                    b.HasIndex("GeneralInfoId");

                    b.HasIndex("ShippingInfoShippingId");

                    b.HasIndex("TaxInfoId");

                    b.HasIndex("TotalsInfoId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Rishvi.Models.Run", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("loadId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Runs");
                });

            modelBuilder.Entity("Rishvi.Models.ShippingInfo", b =>
                {
                    b.Property<Guid?>("ShippingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ItemWeight")
                        .HasColumnType("float");

                    b.Property<bool?>("ManualAdjust")
                        .HasColumnType("bit");

                    b.Property<string>("PackageCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PackageCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PackageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PackageTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("PostageCost")
                        .HasColumnType("float");

                    b.Property<double?>("PostageCostExTax")
                        .HasColumnType("float");

                    b.Property<Guid?>("PostalServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PostalServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TotalWeight")
                        .HasColumnType("float");

                    b.Property<string>("TrackingNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShippingId");

                    b.ToTable("ShippingInfo");
                });

            modelBuilder.Entity("Rishvi.Models.StreamSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CreateProductToStream")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DownloadProductFromStreamToLinnworks")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableWebhook")
                        .HasColumnType("bit");

                    b.Property<bool>("GetDepotListFromStream")
                        .HasColumnType("bit");

                    b.Property<bool>("GetRoutePlanFromStream")
                        .HasColumnType("bit");

                    b.Property<bool>("GetTrackingDetails")
                        .HasColumnType("bit");

                    b.Property<bool>("SendChangeFromLinnworksToStream")
                        .HasColumnType("bit");

                    b.Property<bool>("SendChangesFromEbayToStream")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("StreamSettings");
                });

            modelBuilder.Entity("Rishvi.Models.Subscription", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("event")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("event_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("http_method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("party_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url_path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("Rishvi.Models.SyncSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CreateEbayOrderToStream")
                        .HasColumnType("bit");

                    b.Property<bool>("CreateLinnworksOrderToStream")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DispatchEbayOrderFromStream")
                        .HasColumnType("bit");

                    b.Property<bool>("DispatchLinnworksOrderFromStream")
                        .HasColumnType("bit");

                    b.Property<bool>("SyncEbayOrder")
                        .HasColumnType("bit");

                    b.Property<bool>("SyncLinnworksOrder")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SyncSettings");
                });

            modelBuilder.Entity("Rishvi.Models.TaxInfo", b =>
                {
                    b.Property<Guid>("TaxInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaxNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("TaxInfoId");

                    b.ToTable("TaxInfo");
                });

            modelBuilder.Entity("Rishvi.Models.TotalsInfo", b =>
                {
                    b.Property<Guid>("TotalsInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ConversionRate")
                        .HasColumnType("float");

                    b.Property<double?>("CountryTaxRate")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PaymentMethodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("PostageCost")
                        .HasColumnType("float");

                    b.Property<double?>("PostageCostExTax")
                        .HasColumnType("float");

                    b.Property<double?>("ProfitMargin")
                        .HasColumnType("float");

                    b.Property<double?>("Subtotal")
                        .HasColumnType("float");

                    b.Property<double?>("Tax")
                        .HasColumnType("float");

                    b.Property<double?>("TotalCharge")
                        .HasColumnType("float");

                    b.Property<double?>("TotalDiscount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("TotalsInfoId");

                    b.ToTable("TotalsInfo");
                });

            modelBuilder.Entity("Rishvi.Models.WebhookOrder", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("order")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sequence")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("WebhookOrders");
                });

            modelBuilder.Entity("Rishvi.Modules.ErrorLogs.Models.ErrorLog", b =>
                {
                    b.Property<Guid>("ErrorLogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("ErrorLogID");

                    b.ToTable("ErrorLog");
                });

            modelBuilder.Entity("Rishvi.Modules.ErrorLogs.Models.SystemLog", b =>
                {
                    b.Property<Guid>("SystemLogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<bool>("IsError")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RequestHeader")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponseJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SystemLogID");

                    b.ToTable("SystemLog");
                });

            modelBuilder.Entity("Rishvi.Modules.ShippingIntegrations.Models.ReportModel", b =>
                {
                    b.Property<string>("_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AuthorizationToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateEbayOrderInStream")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateLinnOrderInStream")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DispatchEbayOrderFromStream")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DispatchEbayOrderInStream")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DispatchLinnOrderFromStream")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DispatchLinnOrderInStream")
                        .HasColumnType("datetime2");

                    b.Property<string>("DispatchOrderInEbayJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DispatchOrderInLinnJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DownloadEbayOrderInSystem")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DownloadLinnOrderInSystem")
                        .HasColumnType("datetime2");

                    b.Property<string>("EbayChannelOrderRef")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EbayOrderDetaailJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEbayOrderCreatedInStream")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEbayOrderDispatchFromStream")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEbayOrderDispatchInStream")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLinnOrderCreatedInStream")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLinnOrderDispatchFromStream")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLinnOrderDispatchInStream")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateLinnOrderForStream")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinnNumOrderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinnOrderDetailsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderLineItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreamConsignmentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreamOrderCreateJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreamOrderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreamTrackingNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreamTrackingURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("_id");

                    b.ToTable("ReportModel");
                });

            modelBuilder.Entity("Rishvi.Models.CustomerInfo", b =>
                {
                    b.HasOne("Rishvi.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rishvi.Models.Address", "BillingAddress")
                        .WithMany()
                        .HasForeignKey("BillingAddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("BillingAddress");
                });

            modelBuilder.Entity("Rishvi.Models.IntegrationSettings", b =>
                {
                    b.HasOne("Rishvi.Models.Ebay", "Ebay")
                        .WithMany()
                        .HasForeignKey("EbayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rishvi.Models.LinnworksSettings", "Linnworks")
                        .WithMany()
                        .HasForeignKey("LinnworksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rishvi.Models.StreamSettings", "Stream")
                        .WithMany()
                        .HasForeignKey("StreamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rishvi.Models.SyncSettings", "Sync")
                        .WithMany()
                        .HasForeignKey("SyncId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ebay");

                    b.Navigation("Linnworks");

                    b.Navigation("Stream");

                    b.Navigation("Sync");
                });

            modelBuilder.Entity("Rishvi.Models.Item", b =>
                {
                    b.HasOne("Rishvi.Models.Item", null)
                        .WithMany("CompositeSubItems")
                        .HasForeignKey("ItemId1");

                    b.HasOne("Rishvi.Models.OrderRoot", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderRootOrderId");
                });

            modelBuilder.Entity("Rishvi.Models.OrderRoot", b =>
                {
                    b.HasOne("Rishvi.Models.CustomerInfo", "CustomerInfo")
                        .WithMany()
                        .HasForeignKey("CustomerInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rishvi.Models.Fulfillment", "Fulfillment")
                        .WithMany()
                        .HasForeignKey("FulfillmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rishvi.Models.GeneralInfo", "GeneralInfo")
                        .WithMany()
                        .HasForeignKey("GeneralInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rishvi.Models.ShippingInfo", "ShippingInfo")
                        .WithMany()
                        .HasForeignKey("ShippingInfoShippingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rishvi.Models.TaxInfo", "TaxInfo")
                        .WithMany()
                        .HasForeignKey("TaxInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rishvi.Models.TotalsInfo", "TotalsInfo")
                        .WithMany()
                        .HasForeignKey("TotalsInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerInfo");

                    b.Navigation("Fulfillment");

                    b.Navigation("GeneralInfo");

                    b.Navigation("ShippingInfo");

                    b.Navigation("TaxInfo");

                    b.Navigation("TotalsInfo");
                });

            modelBuilder.Entity("Rishvi.Models.Item", b =>
                {
                    b.Navigation("CompositeSubItems");
                });

            modelBuilder.Entity("Rishvi.Models.OrderRoot", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
