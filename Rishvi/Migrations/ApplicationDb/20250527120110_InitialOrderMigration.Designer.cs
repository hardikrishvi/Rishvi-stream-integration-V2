// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Rishvi.Migrations.ApplicationDb
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250527120110_InitialOrderMigration")]
    partial class InitialOrderMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Rishvi.Models.Item", b =>
                {
                    b.Property<Guid?>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AvailableStock")
                        .HasColumnType("int");

                    b.Property<string>("BarcodeNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BinRack")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChannelSKU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChannelTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Cost")
                        .HasColumnType("float");

                    b.Property<double?>("CostIncTax")
                        .HasColumnType("float");

                    b.Property<string>("ImageId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InOrderBook")
                        .HasColumnType("int");

                    b.Property<Guid?>("ItemId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<int?>("MinimumLevel")
                        .HasColumnType("int");

                    b.Property<int?>("OnOrder")
                        .HasColumnType("int");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("PricePerUnit")
                        .HasColumnType("float");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("RowId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StockItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("StockItemIntId")
                        .HasColumnType("int");

                    b.Property<bool?>("StockLevelsSpecified")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("UnitCost")
                        .HasColumnType("float");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("ItemId");

                    b.HasIndex("ItemId1");

                    b.HasIndex("OrderId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Rishvi.Models.OrderRoot", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("CanFulfil")
                        .HasColumnType("bit");

                    b.Property<string>("FolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HasItems")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPostFilteredOut")
                        .HasColumnType("bit");

                    b.Property<int?>("NumOrderId")
                        .HasColumnType("int");

                    b.Property<Guid>("ShippingInfoShippingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TaxInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("TotalItemsSum")
                        .HasColumnType("int");

                    b.Property<Guid>("TotalsInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderId");

                    b.HasIndex("ShippingInfoShippingId");

                    b.HasIndex("TaxInfoId");

                    b.HasIndex("TotalsInfoId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Rishvi.Models.ShippingInfo", b =>
                {
                    b.Property<Guid?>("ShippingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ItemWeight")
                        .HasColumnType("float");

                    b.Property<bool?>("ManualAdjust")
                        .HasColumnType("bit");

                    b.Property<string>("PackageCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PackageCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PackageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PackageTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("PostageCost")
                        .HasColumnType("float");

                    b.Property<double?>("PostageCostExTax")
                        .HasColumnType("float");

                    b.Property<Guid?>("PostalServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PostalServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TotalWeight")
                        .HasColumnType("float");

                    b.Property<string>("TrackingNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShippingId");

                    b.ToTable("Shippings");
                });

            modelBuilder.Entity("Rishvi.Models.TaxInfo", b =>
                {
                    b.Property<Guid>("TaxInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TaxNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaxInfoId");

                    b.ToTable("TaxInfo");
                });

            modelBuilder.Entity("Rishvi.Models.TotalsInfo", b =>
                {
                    b.Property<Guid>("TotalsInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ConversionRate")
                        .HasColumnType("float");

                    b.Property<double?>("CountryTaxRate")
                        .HasColumnType("float");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PaymentMethodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("PostageCost")
                        .HasColumnType("float");

                    b.Property<double?>("PostageCostExTax")
                        .HasColumnType("float");

                    b.Property<double?>("ProfitMargin")
                        .HasColumnType("float");

                    b.Property<double?>("Subtotal")
                        .HasColumnType("float");

                    b.Property<double?>("Tax")
                        .HasColumnType("float");

                    b.Property<double?>("TotalCharge")
                        .HasColumnType("float");

                    b.Property<double?>("TotalDiscount")
                        .HasColumnType("float");

                    b.HasKey("TotalsInfoId");

                    b.ToTable("Totals");
                });

            modelBuilder.Entity("Rishvi.Models.Item", b =>
                {
                    b.HasOne("Rishvi.Models.Item", null)
                        .WithMany("CompositeSubItems")
                        .HasForeignKey("ItemId1");

                    b.HasOne("Rishvi.Models.OrderRoot", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("Rishvi.Models.OrderRoot", b =>
                {
                    b.HasOne("Rishvi.Models.ShippingInfo", "ShippingInfo")
                        .WithMany()
                        .HasForeignKey("ShippingInfoShippingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rishvi.Models.TaxInfo", "TaxInfo")
                        .WithMany()
                        .HasForeignKey("TaxInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rishvi.Models.TotalsInfo", "TotalsInfo")
                        .WithMany()
                        .HasForeignKey("TotalsInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Rishvi.Models.CustomerInfo", "CustomerInfo", b1 =>
                        {
                            b1.Property<Guid>("OrderRootOrderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("ChannelBuyerName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OrderRootOrderId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("OrderRootOrderId");

                            b1.OwnsOne("Rishvi.Models.Address", "Address", b2 =>
                                {
                                    b2.Property<Guid>("CustomerInfoOrderRootOrderId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Address1")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Address2")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Address3")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Company")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Continent")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Country")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<Guid?>("CountryId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("EmailAddress")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("FullName")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("PhoneNumber")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("PostCode")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Region")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Town")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("CustomerInfoOrderRootOrderId");

                                    b2.ToTable("Customers");

                                    b2.WithOwner()
                                        .HasForeignKey("CustomerInfoOrderRootOrderId");
                                });

                            b1.OwnsOne("Rishvi.Models.Address", "BillingAddress", b2 =>
                                {
                                    b2.Property<Guid>("CustomerInfoOrderRootOrderId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Address1")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Address2")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Address3")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Company")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Continent")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Country")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<Guid?>("CountryId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("EmailAddress")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("FullName")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("PhoneNumber")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("PostCode")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Region")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Town")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("CustomerInfoOrderRootOrderId");

                                    b2.ToTable("Customers");

                                    b2.WithOwner()
                                        .HasForeignKey("CustomerInfoOrderRootOrderId");
                                });

                            b1.Navigation("Address")
                                .IsRequired();

                            b1.Navigation("BillingAddress")
                                .IsRequired();
                        });

                    b.OwnsOne("Rishvi.Models.Fulfillment", "Fulfillment", b1 =>
                        {
                            b1.Property<Guid>("OrderRootOrderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("FulfillmentState")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PurchaseOrderState")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OrderRootOrderId");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderRootOrderId");
                        });

                    b.OwnsOne("Rishvi.Models.GeneralInfo", "GeneralInfo", b1 =>
                        {
                            b1.Property<Guid>("OrderRootOrderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime?>("DespatchByDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("ExternalReferenceNum")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool?>("HasScheduledDelivery")
                                .HasColumnType("bit");

                            b1.Property<bool?>("HoldOrCancel")
                                .HasColumnType("bit");

                            b1.Property<bool?>("InvoicePrinted")
                                .HasColumnType("bit");

                            b1.Property<bool?>("IsParked")
                                .HasColumnType("bit");

                            b1.Property<bool?>("IsRuleRun")
                                .HasColumnType("bit");

                            b1.Property<string>("LabelError")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool?>("LabelPrinted")
                                .HasColumnType("bit");

                            b1.Property<Guid?>("Location")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int?>("Marker")
                                .HasColumnType("int");

                            b1.Property<int?>("Notes")
                                .HasColumnType("int");

                            b1.Property<int?>("NumItems")
                                .HasColumnType("int");

                            b1.Property<bool?>("PartShipped")
                                .HasColumnType("bit");

                            b1.Property<bool?>("PickListPrinted")
                                .HasColumnType("bit");

                            b1.Property<DateTime?>("ReceivedDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("ReferenceNum")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SecondaryReference")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SiteCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Source")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Status")
                                .HasColumnType("int");

                            b1.Property<string>("SubSource")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OrderRootOrderId");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderRootOrderId");
                        });

                    b.Navigation("CustomerInfo")
                        .IsRequired();

                    b.Navigation("Fulfillment")
                        .IsRequired();

                    b.Navigation("GeneralInfo")
                        .IsRequired();

                    b.Navigation("ShippingInfo");

                    b.Navigation("TaxInfo");

                    b.Navigation("TotalsInfo");
                });

            modelBuilder.Entity("Rishvi.Models.Item", b =>
                {
                    b.Navigation("CompositeSubItems");
                });

            modelBuilder.Entity("Rishvi.Models.OrderRoot", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
